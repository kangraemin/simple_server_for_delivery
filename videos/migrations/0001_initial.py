# Generated by Django 2.2.5 on 2021-10-06 13:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('foods', '0001_initial'),
        ('restaurants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='YoutubeVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('youtube_video_id', models.CharField(max_length=100)),
                ('youtube_video_start_time', models.IntegerField()),
                ('main_food_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='youtube_videos', to='foods.MainFoodCategory')),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='youtube_videos', to='restaurants.Restaurants')),
            ],
            options={
                'db_table': 'youtube_video',
            },
        ),
        migrations.CreateModel(
            name='YoutubeVideoSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('sub_food_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foods.SubFoodCategory')),
                ('youtube_video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.YoutubeVideo')),
            ],
            options={
                'db_table': 'youtube_video_sub_category',
            },
        ),
        migrations.AddField(
            model_name='youtubevideo',
            name='sub_food_category',
            field=models.ManyToManyField(related_name='youtube_videos', through='videos.YoutubeVideoSubCategory', to='foods.SubFoodCategory'),
        ),
    ]
